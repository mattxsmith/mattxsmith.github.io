{"version":3,"sources":["Sidebar.js","Market.js","BettingEvent.js","MarketList.js","validators.js","BetSlip.js","UserBanner.js","testData.js","App.js","index.js"],"names":["Sidebar","props","sportIcons","React","useState","menuItems","menuItemsJSX","map","x","className","key","href","id","onClick","event","icon","document","querySelector","body","classList","contains","remove","add","style","marginLeft","Market","divId","gameId","marketId","openBetSlip","name","bid","ask","BettingEvent","odds","info","markets","forEach","marketList","MarketList","gameList","games","g","gId","Object","keys","gameOdds","Number","indexOf","marketsList","americanToPercent","a","arrSum","arr","reduce","b","validateAmerican","toString","replace","startsWith","length","validateDecimal","d","isNaN","americanToDecimal","Math","round","decimalToAmerican","p","validateBetAmount","numRound","n","BetSlip","betType","setBetType","oppositeSideBetType","orderbookOdds","selectedMarketOdds","filter","side","sort","y","price","defaultPrice","slice","enteredPrice","setEnteredPrice","enteredDecimalPrice","setEnteredDecimalPrice","betAmount","setBetAmount","betAmountUsd","changeBetType","selectedDivId","deselectedDivId","selectedDiv","deselectedDiv","assign","border","fontWeight","color","background","ontWeight","borderLeftStyle","selectBetType","target","innerText","onPriceChange","validated","value","validatedDecimal","invalidPrice","validatedAmerican","onPriceInputFocus","priceType","inputStyle","paddingLeft","height","width","marginTop","shadedInputStyle","orderbookRows","ind","amount","indd","t","orderbookTable","toWinAmount","textStyleColor","betAlertText","requestBody","selectedMarket","toLowerCase","requestParams","method","headers","jwt","JSON","stringify","useEffect","textAlign","textDecoration","closeFunc","gameName","marketName","marginBottom","onFocus","type","size","onChange","disabled","fetch","then","response","status","display","UserBanner","bannerText","user","cleanUser","signOutFunc","testGames","testOffers","AmazonCognitoIdentity","require","App","1","setGameList","openOffers","setOpenOffers","blankSelectedMarket","undefined","setSelectedMarket","getBestOdds","i","offer","currentBest","newBest","json","getGames","offers","getOpenOffers","userName","cognitoUser","CognitoUserPool","UserPoolId","ClientId","getCurrentUser","username","getSession","err","session","getIdToken","getJwtToken","bs","signOut","eventId","eventGame","eventMarket","split","marketInfo","m","newSelectedMarket","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.6d711e40.chunk.js","sourcesContent":["import React from 'react';\n\nfunction Sidebar(props) {\n    let sampleItems = ['Home', 'Football', 'Baseball', 'Basketball', 'Soccer', 'Other']\n    let sportIcons = {\n        'Home': 'fa fa-home',\n        'Football': 'fas fa-football-ball',\n        'Basketball': 'fas fa-basketball-ball',\n        'Baseball': 'fas fa-baseball-ball',\n        'Soccer': 'fas fa-futbol',\n        'Other': 'fas fa-ellipsis-v',\n    }\n    let [menuItems, setMenuItems] = React.useState(sampleItems);\n\n    let menuItemsJSX = menuItems.map(x => (\n        <li className=\"list-item\" key={x}>\n            <a href=\"#\"><i className={sportIcons[x]}></i><span>{x}</span></a>\n        </li>\n    ));\n\n    function sidebarCollapse(event) {\n        // fires when the user wants to expand or collapse the sidebar\n        const icon = document.querySelector('#menuicon');\n        const isCollapsed = document.body.classList.contains('sidebar-mini');\n        if (isCollapsed) {\n            // if it's collapsed, then expand\n            document.body.classList.remove('sidebar-mini');\n            icon.classList.remove('fa-bars');\n            icon.classList.add('fa-times');\n            document.querySelector('.page-content').style.marginLeft = '200px'\n        } else {\n            // if it's not collapsed, then collapse\n            document.body.classList.add('sidebar-mini');\n            icon.classList.remove('fa-times');\n            icon.classList.add('fa-bars');\n            document.querySelector('.page-content').style.marginLeft = '75px'\n        }\n    }\n\n    return (\n        <div className=\"sidebar\">\n            <div className=\"sidebar-content\">\n                <div className=\"navicon\" id='toggle-sidebar-icon'>\n                    <button className=\"menu-icon\" onClick={sidebarCollapse}\n                        ><i id=\"menuicon\" className=\"fas fa-chevron-right \"></i>\n                    </button>\n                </div>\n                <ul className=\"sidebar-menu list-unstyled\">\n                    {menuItemsJSX}\n                </ul>\n            </div>\n        </div>\n    \n    )\n}\n\nexport default Sidebar;\n","import React from 'react';\n\nfunction Market(props) {\n    \n    let divId = 'market:' + props.gameId + ':' + props.marketId;\n\n    return (\n        <div className=\"market-orderbook-row\" id={divId} onClick={props.openBetSlip}>\n            <div className={'market-name ' + divId}>{props.name}</div>\n            <div className={'market-bid ' + divId}>{props.bid}</div>\n            <div className={'market-ask ' + divId}>{props.ask}</div>\n        </div>\n    );\n}\n\nexport default Market;","import React from 'react';\nimport Market from './Market';\n\nfunction BettingEvent(props) {\n    let odds = {};\n    props.info.markets.forEach(x => odds[x.id] = props.odds[x.id] || {bid: null, ask: null}); \n\n    let marketList = props.info.markets.map(x => (\n        <Market gameId={props.info.gameId} marketId={x.id}name={x.name} key={x.id}\n        bid={odds[x.id].bid} ask={odds[x.id].ask} openBetSlip={props.openBetSlip}/>\n    ));\n\n    return (\n        <div id={'event:' + props.info.gameId}>\n            <div className='market-title'> {props.info.name}</div>\n                <div className='orderbook'> \n                <div className='orderbook-header-row'>\n                    <div className='orderbook-header'>Market</div>\n                    <div className='orderbook-header'>Bid</div>\n                    <div className='orderbook-header'>Ask</div>\n                </div>\n                {marketList}\n            </div>\n      </div>\n    );\n}\n\nexport default BettingEvent;","import React from 'react';\nimport BettingEvent from './BettingEvent';\n\n\nfunction MarketList(props) {\n    // check to make sure all the games have a corresponding odds key\n    let odds = {};\n    function checkOddsExist(gId) {\n        let existingGames = Object.keys(props.gameOdds).map(x => Number(x));\n        return existingGames.indexOf(Number(gId)) >= 0;\n    }\n    props.gameList.games.forEach((g) => {\n        if (!checkOddsExist(g.gameId)) {\n            odds[g.gameId] = {};\n        } else {\n            odds[g.gameId] = props.gameOdds[g.gameId];\n        }\n    });\n\n    let marketsList = props.gameList.games.map(x => (\n        <BettingEvent openBetSlip={props.openBetSlip} info={x} key={x.gameId}\n        odds={odds[x.gameId]}/>\n    ));\n\n    return (\n        <div id=\"markets\">\n            {marketsList}\n        </div>\n    );\n}\n\nexport default MarketList;","export const percentToAmerican = (p) => p < .5 ? '+' + Math.round(100/p-100) : '-' + Math.round(100/(1-p) - 100);\n\nexport const americanToPercent = function(a) {\n    if (Number(a) > 0) {\n        return 100/(a+100);\n    } else {\n        return a/(a-100);\n    }\n}\n\nexport const arrSum = arr => arr.reduce((a,b) => a + b, 0)\n\nexport const validateAmerican = function(a) {\n    a = a.toString();\n    if (a === '') {\n        return a;\n    } else {\n        a = a.replace(/[^+\\-0-9].*$/g, '');\n        a = a.replace(/(.+)[^0-9]/, '$1');\n        a = !(a.startsWith('-') || a.startsWith('+')) && a.length > 0 ? '+' + a : a;\n        return a;\n    }\n};\n\nexport const validateDecimal = function(d) {\n    d = d.toString();\n    if (d === '') {\n        return d;\n    } else {\n        d = d.replace(/[^0-9.].*$/g, '');\n        d = d.replace(/^\\./g, '1.');\n        d = d.replace(/^[^1-9]/, '');\n        d = d.replace(/^([1-9][0-9]*\\.[0-9]*)[^0-9]/g, '$1');\n        d = d.replace(/^(\\d+)$/g, '$1.0');\n        d = Number.isNaN(d) ? '' : d;\n        return d;\n    }\n};\n\nexport const americanToDecimal = function(a) {\n    if (a.length >= 4) {\n        return Math.round((a < 0 ? -100/a + 1 : a/100 + 1)*1000)/1000;\n    }\n    else { \n        return '';\n    }\n}; \n\nexport const decimalToAmerican = function(d) {\n    if (d === '' || d <= 1) {\n        return '';\n    } else {\n        return percentToAmerican(1/d);\n    }\n}; \n\nexport const validateBetAmount = function(b) {\n    if (b == '') {\n        return b;\n    } else {\n        b = b.replace(/[^0-9.]/g, '');\n        b = b.replace(/^\\.$/g, '0.');\n        b = b.replace(/^0([^.])$/g, '$1');\n        b = b.replace(/^(.*\\..*)\\.$/g, '$1');\n        return b\n    }\n}\n\nexport const numRound = (n, d) => Math.round(n*10**d)/10**d;\n","import React from 'react';\nimport { validateAmerican, validateDecimal, americanToPercent, arrSum } from './validators';\nimport { validateBetAmount, americanToDecimal, decimalToAmerican } from './validators';\nimport { numRound } from './validators';\n\nfunction BetSlip(props) {\n    let [betType, setBetType] = React.useState('Bid');\n\n    let oppositeSideBetType = betType === 'Bid' ? 'ask' : 'bid';\n    let orderbookOdds = props.selectedMarketOdds.filter(x => x.side == oppositeSideBetType);\n    orderbookOdds.sort((x,y) => americanToPercent(x.price) - americanToPercent(y.price));\n    orderbookOdds = orderbookOdds.slice(0, 5);\n\n    let defaultPrice = orderbookOdds[0] || {price: '+100'}\n    defaultPrice = defaultPrice.price;    \n\n    let [enteredPrice, setEnteredPrice] = React.useState(defaultPrice);\n    let [enteredDecimalPrice, setEnteredDecimalPrice] = React.useState(validateDecimal(americanToDecimal((enteredPrice))));\n    let [betAmount, setBetAmount] = React.useState(1);\n    let betAmountUsd = `$${Math.round((betAmount*10.563)*100)/100}`;\n    \n    function closeBetSlip(event) {\n        document.querySelector('#bet-slip').style.display = 'none';\n    }\n\n    function changeBetType(betType) {\n        let selectedDivId = betType === 'Bid' ? '#bs-bid-select' : '#bs-ask-select';\n        let deselectedDivId = betType === 'Bid' ? '#bs-ask-select' : '#bs-bid-select';\n        \n        let selectedDiv = document.querySelector(selectedDivId);\n        let deselectedDiv = document.querySelector(deselectedDivId);\n\n        let selectedStyle = {\n            border: '1px solid black',\n            fontWeight: 'bold',\n            color: 'black',\n            background: '#b1d1de'\n        }\n        Object.assign(selectedDiv.style, selectedStyle);\n\n        let deselectedStyle = {\n            border: '1px solid rgb(170, 168, 168)',\n            ontWeight: 'normal',\n            color: 'rgb(170, 168, 168)',\n            background: 'none',\n        }\n        Object.assign(deselectedDiv.style, deselectedStyle);\n        if (betType === 'Bid') {\n            deselectedDiv.style.borderLeftStyle = 'none';\n        }\n        setBetType(betType);\n    }\n\n    function selectBetType(event) {\n        let betType = event.target.innerText === 'Buy' ? 'Bid' : 'Ask';\n        changeBetType(betType);\n    }\n\n    function onPriceChange(event) {\n        let priceType = event.target.id;\n        if (priceType === 'american-price') {\n            let validated = validateAmerican(event.target.value);\n            let validatedDecimal = validateDecimal(americanToDecimal(validated));\n            setEnteredPrice(validated);\n            setEnteredDecimalPrice(validatedDecimal);\n            let invalidPrice = validated === '' || validatedDecimal === '';\n            event.target.style.background = invalidPrice ? '#fbb' : 'none';\n        } else {\n            let validated = validateDecimal(event.target.value);\n            let validatedAmerican = validateAmerican(decimalToAmerican(validated));\n            setEnteredDecimalPrice(validated);\n            setEnteredPrice(validatedAmerican);\n            let invalidPrice = validated === '' || validatedAmerican === '';\n            event.target.style.background = invalidPrice ? '#fbb' : 'none';\n        }\n    }\n\n    function onPriceInputFocus(event) {\n        let priceType = event.target.id;\n        event.target.style.background = '#fff';\n        if (priceType === 'american-price') {\n            document.querySelector('#decimal-price').style.background = '#ddd';\n        } else {\n            document.querySelector('#american-price').style.background = '#ddd';\n        }\n    }\n\n    function onAmountChange(event) {\n        setBetAmount(validateBetAmount(event.target.value));\n    }\n\n    let inputStyle = {\n        border: '1px solid #bbb',\n        paddingLeft: '.25em',\n        height: '90%',\n        width: '80px',\n        marginTop: '2px',\n    };\n\n    let shadedInputStyle = Object.assign({background: '#ddd'}, inputStyle);\n    \n    let orderbookRows = orderbookOdds.map((x, ind) => \n        <tr key={ind}>\n            <td>{x.price}</td>\n            <td>{x.amount}</td>\n            <td>{numRound(arrSum(orderbookOdds.filter((a, indd) => indd <= ind).map(t => t.amount)), 2)}</td>\n        </tr>)\n    let orderbookTable = \n        <table id=\"orderbook-table\">\n            <thead>\n                <tr>\n                    <td>American</td><td>Amount (mBTC)</td><td style={{}}>Cumulative</td>\n                </tr>\n            </thead>\n            <tbody>\n                {orderbookRows}\n            </tbody>\n        </table>\n\n    // let betAlertText = `You are betting ${betAmount} mBTC that this event ${betType === 'Bid' ? 'WILL' : 'WON\\'T'} happen.`;\n    let toWinAmount = betType === 'Bid' ? betAmount*(enteredDecimalPrice-1) : betAmount/(enteredDecimalPrice-1) ;\n    let textStyleColor = betType === 'Bid' ? 'green' : 'red' ;\n    toWinAmount = numRound(toWinAmount, 3);\n    let betAlertText = <span>{'You are betting ' + betAmount + ' mBTC to win ' + toWinAmount\n        + ' mBTC. You will win if this event'} <span style={{color: textStyleColor}}>{betType === 'Bid' ? 'DOES' : \"DOESN'T\"}</span> {' happen.'}</span>\n    betAlertText = enteredPrice && enteredDecimalPrice ? betAlertText : <span></span>;\n\n    let requestBody = {\n        amount: betAmount,\n        price: enteredPrice,\n        gameId: props.selectedMarket.gameId,\n        marketId: props.selectedMarket.marketId,\n        side: betType.toLowerCase(),\n    }\n    let headers = {\n        'Content-Type': 'application/json',\n        'Authorization': props.jwt\n    };\n    \n    requestBody = JSON.stringify(requestBody);\n    let requestParams = {\n        method: 'POST', // *GET, POST, PUT, DELETE, etc.\n        headers: headers,\n        body: requestBody // body data type must match \"Content-Type\" header\n    }\n\n    function onSubmit() {\n        let r = fetch('https://qr6ymdjft0.execute-api.us-east-1.amazonaws.com/prod/create-offer', requestParams);\n        r.then(response => {\n            if (response.status === 201) {\n                \n                document.querySelector('#bs-bet-succeed').style.display = 'block';\n            } else {\n                document.querySelector('#bs-bet-failed').style.display = 'block';\n            }\n        })\n    } \n\n\n    React.useEffect(() => {\n        changeBetType('Bid');\n        setEnteredPrice(defaultPrice);\n    }, []);\n\n    return (\n        <div id='bet-slip'>\n            <h3 id=\"bet-slip-title\" style={{textAlign: 'center', textDecoration: 'underline'}}>Make a Bet</h3>\n            <button id=\"close-bet-slip\" onClick={props.closeFunc}>\n                <i className=\"fa fa-times\"></i>\n            </button>\n            <h4><b>Event: </b>{props.selectedMarket.gameName}</h4>\n            <h4><b>Market: </b>{props.selectedMarket.marketName}</h4>\n            <hr style={{border: '.5px solid #999'}}></hr>\n            <div id=\"bs-bid-ask-selector\">\n                <div onClick={selectBetType} id=\"bs-bid-select\">Buy</div>\n                <div onClick={selectBetType} id=\"bs-ask-select\">Sell</div>\n            </div>\n            <div id=\"orderbook\">\n                <h4>{`Open Offers to ${betType === 'Bid' ? 'Sell' : 'Buy'}`}</h4>\n                {orderbookTable}\n            </div>\n            <div id='bs-prices'>\n                <h4 style={{marginBottom: '1px'}}>Price</h4>\n                <div>\n                    <span>American</span> \n                    <input style={inputStyle} onFocus={onPriceInputFocus} id='american-price' type='text' \n                    size={10} onChange={onPriceChange} value={enteredPrice}></input>\n                </div>\n                <div>\n                    <span>Decimal</span>\n                    <input style={shadedInputStyle} onFocus={onPriceInputFocus} id='decimal-price' type='text'\n                    size={10} onChange={onPriceChange} value={enteredDecimalPrice}></input>\n                </div>\n            </div>\n            <div id='bs-bet-amount'>\n                <h4 style={{marginBottom: '1px'}}>Bet Amount</h4>\n                <div>\n                    <span>mBTC</span> \n                    <input style={inputStyle} id='bs-mbtc-amount' type='text' size={10} value={betAmount} \n                    onChange={onAmountChange}></input>\n                </div>\n                <div>\n                    <span>USD</span>\n                    <input disabled={true} style={shadedInputStyle} id='bs-usd-amount' type='text' size={10} \n                    value={betAmountUsd}></input>\n                </div>\n            </div>\n            <div style={{marginTop: '10px', fontWeight: 'bold'}}>{betAlertText}</div>\n            <div id='bs-submit'>\n                <button id='bs-submit-button' onClick={onSubmit}>Submit</button>\n            </div>\n            <div id='bs-bet-succeed'>Your bet was successfully placed.</div>\n            <div id='bs-bet-failed'>There was a problem and your bet was not placed.</div>\n        </div>\n    )\n\n}\n\nexport default BetSlip;\n","import React from 'react';\nimport './App.css';\n\nfunction UserBanner(props) {\n    let bannerText;\n    if (props.user) {\n        let cleanUser = props.user.replace('-at-', '@');\n        bannerText = <span>Logged In As: {cleanUser} | <a href=\"/\" onClick={props.signOutFunc}>Log Out</a></span>;\n    } else {\n        bannerText = <span><a href='signin.html'>Log In</a></span>;\n    }\n    return (\n        <div id=\"user-banner\" style={{fontWeight: 'bold'}}>\n            {bannerText}\n        </div>\n    )\n}\n\nexport default UserBanner;\n","export const testGames = {\"games\":[{\"markets\":[{\"name\":\"Seattle Seahawks\",\"id\":\"1\"},{\"name\":\"Arizona Cardinals\",\"id\":\"2\"},{\"name\":\"Los Angeles Rams\",\"id\":\"3\"},{\"name\":\"San Francisco 49ers\",\"id\":\"4\"}],\"gameId\":\"2\",\"name\":\"NFC West Winner\",\"sport\":\"Football\"},{\"markets\":[{\"name\":\"Los Angeles Clippers\",\"id\":\"1\"},{\"name\":\"Toronto Raptors\",\"id\":\"2\"},{\"name\":\"Houston Rockets\",\"id\":\"3\"},{\"name\":\"Other\",\"id\":\"4\"}],\"gameId\":\"1\",\"name\":\"2019 NBA Champion\",\"sport\":\"basketball\"},{\"markets\":[{\"name\":\"Houston Astros\",\"id\":\"1\"},{\"name\":\"New York Yankees\",\"id\":\"2\"},{\"name\":\"Other\",\"id\":\"3\"}],\"gameId\":\"3\",\"name\":\"2019 MLB AL Champions\",\"sport\":\"Baseball\"},{\"markets\":[{\"name\":\"Seahawks -8.5\",\"id\":\"1\"},{\"name\":\"O/U 45.5\",\"id\":\"2\"}],\"gameId\":\"-1\",\"name\":\"NFL Week 1: Bengals @ Seahawks\",\"sport\":\"Football\"}]};\nexport const testOffers = {\"offers\":[{\"marketId\":2,\"offerId\":\"klmfffalsdjnjaasd\",\"userId\":1,\"amount\":1.3,\"side\":\"ask\",\"price\":\"-224\",\"gameId\":-1},{\"marketId\":2,\"offerId\":\"ffalsdjnjaasd\",\"userId\":1,\"amount\":1.3,\"side\":\"bid\",\"price\":\"-200\",\"gameId\":-1},{\"marketId\":1,\"offerId\":\"klmfalsdjnjaasd\",\"userId\":1,\"amount\":1.3,\"side\":\"ask\",\"price\":\"+124\",\"gameId\":-1},{\"marketId\":2,\"offerId\":\"klmfffalnjaasd\",\"userId\":1,\"amount\":1.3,\"side\":\"ask\",\"price\":\"+224\",\"gameId\":1},{\"marketId\":2,\"offerId\":\"smith\",\"userId\":1,\"amount\":1.3,\"side\":\"bid\",\"price\":\"-201\",\"gameId\":-1},{\"marketId\":1,\"offerId\":\"klmfalsdjnjasd\",\"userId\":1,\"amount\":1.3,\"side\":\"bid\",\"price\":\"+145\",\"gameId\":-1},{\"marketId\":2,\"offerId\":\"matthew\",\"userId\":1,\"amount\":1.3,\"side\":\"bid\",\"price\":\"-204\",\"gameId\":-1}]};\n","import React from 'react';\nimport Sidebar from './Sidebar';\nimport MarketList from './MarketList';\nimport BetSlip from './BetSlip';\nimport UserBanner from './UserBanner';\nimport {testGames, testOffers} from './testData';\nimport './App.css';\n\nvar AmazonCognitoIdentity = require('amazon-cognito-identity-js');\n\nfunction App() {\n  let sampleGameList = {games: []};\n  let gameOdds = {'-1': {1: {bid: '+134', ask: '+122'}}};\n\n  let [gameList, setGameList] = React.useState(sampleGameList);\n  let [openOffers, setOpenOffers] = React.useState([]);\n  let blankSelectedMarket = {gameId: undefined, marketId: undefined, gameName: undefined, marketName: undefined};\n  let [selectedMarket, setSelectedMarket] = React.useState(blankSelectedMarket);\n\n  function closeBetSlip(event) {\n    setSelectedMarket(blankSelectedMarket);\n  }\n\n  function openBetSlip(event) {\n    if (!jwt) {\n      document.querySelector('#bet-slip-login').style.display = 'block';\n    }\n    else {\n      let divClasses = event.target.className.split(' ');\n      let eventId, eventGame, eventMarket;\n      divClasses.forEach(function(x) {\n        if (x.startsWith('market:')) {\n          eventId = x;\n        }\n      });\n  \n      eventId = eventId || event.target.id;\n      let marketInfo = eventId.split(':');\n      let gameId = marketInfo[1];\n      let marketId = marketInfo[2];\n      gameList.games.forEach(function(g) {\n        if (g.gameId === gameId) {\n          eventGame = g;\n        }\n      });\n      eventGame.markets.forEach(function(m) {\n        if (m.id === marketId) {\n          eventMarket = m;\n        }\n      });\n      let newSelectedMarket = {gameId: Number(gameId),\n        marketId: Number(marketId), gameName: eventGame.name, marketName: eventMarket.name};\n      setSelectedMarket(newSelectedMarket);\n    }\n  }\n\n  function getGames(test=false) {\n    if (test) {\n      testGames.games.sort((x,y) => x.gameId - y.gameId);\n      setGameList(testGames);\n      getBestOdds(testGames.games);\n    } else {\n      let apiEndpoint = 'https://qr6ymdjft0.execute-api.us-east-1.amazonaws.com/prod/get-games';\n      fetch(apiEndpoint)\n      .then(response => response.json())\n      .then(function(g) {\n          g.games.sort((x,y) => x.gameId - y.gameId);\n          setGameList(g);\n          return g.games;\n      })\n      .then(g => getBestOdds(g))\n      ;\n    }\n  }\n\n  function getOpenOffers(games, test=false) {\n    if (test) {\n      setOpenOffers(testOffers.offers);\n    } else {\n      let apiEndpoint = 'https://qr6ymdjft0.execute-api.us-east-1.amazonaws.com/prod/get-offers';\n      fetch(apiEndpoint)\n      .then(response => response.json())\n      .then(g => setOpenOffers(g.offers));\n    }\n  }\n\n  function getBestOdds() {\n    let odds = {};\n    for (let i=0; i < openOffers.length; i++) {\n      let offer = openOffers[i];\n      let side = offer.side;\n      if (Object.keys(odds).indexOf(offer.gameId.toString()) === -1) {\n        odds[offer.gameId] = {};\n      }\n      if (Object.keys(odds[offer.gameId]).indexOf(offer.marketId.toString()) === -1) {\n        odds[offer.gameId][offer.marketId] = {bid: undefined, ask: undefined};\n      }\n      \n      if (side === 'bid') {\n        let currentBest = odds[offer.gameId][offer.marketId].bid;\n        let newBest = Number(offer.price) < (Number(currentBest) || 999999) ? offer.price : currentBest;\n        odds[offer.gameId][offer.marketId].bid = newBest;\n      } else if (side === 'ask') {\n        let currentBest = odds[offer.gameId][offer.marketId].ask;\n        let newBest = Number(offer.price) > (Number(currentBest) || -999999) ? offer.price : currentBest;\n        odds[offer.gameId][offer.marketId].ask = newBest;\n      }\n    }\n    gameOdds = odds;\n  }\n\n  React.useEffect(function() {\n    getGames();\n    getOpenOffers(gameList.games);\n  }, []);\n\n  getBestOdds();\n  let selectedMarketOdds = openOffers.filter(x => x.gameId === selectedMarket.gameId);\n  selectedMarketOdds = selectedMarketOdds.filter(x => x.marketId === selectedMarket.marketId);\n\n  var poolData = {\n    UserPoolId: 'us-east-1_MGapEsnoj',\n    ClientId: '7khip3shhdpt8rgf971ptn73ci'\n  };\n  var userPool = new AmazonCognitoIdentity.CognitoUserPool(poolData);\n  var cognitoUser = userPool.getCurrentUser()\n  let userName;\n  let jwt;\n  if (cognitoUser) {\n    userName = cognitoUser.username;\n    cognitoUser.getSession(function(err, session) {\n      jwt = session.getIdToken().getJwtToken();\n    });\n  };\n\n  let signOutFunc = (event) => cognitoUser.signOut();\n  let blankBetSlip = <div id='bet-slip-login'><h3>To make a bet, please <a href='signin.html'>sign in </a> \n    or <a href='register.html'>register</a> for an account.</h3></div>;\n  \n  let bs = blankBetSlip;\n  if (selectedMarket.marketId && jwt) {\n    bs = <BetSlip selectedMarket={selectedMarket} closeFunc={closeBetSlip}\n      odds={gameOdds} selectedMarketOdds={selectedMarketOdds} jwt={jwt}/>;\n  }\n  \n  return (\n    <div className=\"App\">\n      <Sidebar />\n      <UserBanner user={userName} signOutFunc={signOutFunc}/>\n      <div className='page-content'>\n        <h1 style={{marginBottom: '1em'}}>Lightning Bet</h1>\n        <MarketList openBetSlip={openBetSlip} gameList={gameList} gameOdds={gameOdds}/>\n        {bs}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n"],"sourceRoot":""}